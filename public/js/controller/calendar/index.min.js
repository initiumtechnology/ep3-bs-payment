(function () {
  var f;
  var l;
  var e = false;
  var j;
  var b = 300;
  var k = 350;
  $(document).ready(function () {
    f = $(".calendar-table");
    f.on("click", "a.calendar-cell", function (r) {
      var q = $(this);
      if (!q.hasClass("squarebox-external-link")) {
        r.preventDefault();
        if (!l) {
          r.stopPropagation();
          m(q.attr("href"));
        }
      }
    });
    $(window).resize(o);
    $(window).on("squarebox.update", o);
    $("body").on("click", "#squarebox-overlay", function () {
      i();
    });
    $("a.calendar-cell").hover(
      function () {
        var s = $(this);
        var r = s.attr("class");
        var t = r.match(/cc-group-\d+/);
        if (t) {
          var q = $("a." + t);
          q.each(function () {
            $(this).data("original-style", $(this).attr("style"));
          });
          q.css({
            opacity: 0.9,
            "background-color": s.css("background-color"),
          });
          s.css("opacity", 1);
        }
      },
      function () {
        var s = $(this);
        var r = s.attr("class");
        var t = r.match(/cc-group-\d+/);
        if (t) {
          var q = $("a." + t);
          q.each(function () {
            $(this).attr("style", $(this).data("original-style"));
          });
        }
      }
    );
    d();
    $(window).resize(d);
    $(document).on("updateLayout", d);
    var p = [
      ".cc-event",
      ".cc-single",
      ".cc-own",
      ".cc-multiple",
      ".cc-multiple-14",
      ".cc-conflict",
    ];
    a(p);
    $(window).resize(function (q) {
      a(p);
    });
    $(document).on("updateLayout", function (q) {
      a(p);
    });
  });
  function m(p) {
    var q = $("#calendar-squarebox-template");
    if (q.length) {
      c(q.html());
    } else {
      c('<div class="padded">...</p>');
    }
    l.clearQueue()
      .delay(b)
      .queue(function () {
        $.ajax({
          cache: false,
          data: { ajax: true },
          dataType: "html",
          error: function () {
            if (l && !e) {
              window.location.href = p;
            }
          },
          success: function (r) {
            if (l && !e) {
              c(r);
              l.find(".no-ajax").remove();
              l.find(".datepicker").datepicker();
              l.find(".inline-label-container").each(function () {
                updateInlineLabel($(this));
              });
              l.append(
                '<a href="#" class="squarebox-primary-close-link squarebox-close-link">&times;</a>'
              );
              o();
              l.on("click", "a.squarebox-internal-link", function (s) {
                s.preventDefault();
                m($(this).attr("href"));
              });
              l.on("click", "a.squarebox-close-link", function (s) {
                s.preventDefault();
                window.location.reload();
                i();
              });
            }
          },
          url: p,
        });
        $(this).dequeue();
      });
  }
  function g() {
    if (!j) {
      j = $('<div id="squarebox-overlay"></div>').css({
        position: "absolute",
        "z-index": 1532,
        opacity: 0,
        width: $(document).width(),
        height: $(document).height(),
        left: 0,
        top: 0,
        background: "#333",
      });
      $("body").prepend(j);
    }
    if (!l) {
      l = $('<div class="panel"></div>').css({
        position: "absolute",
        "z-index": 1536,
      });
      $("body").prepend(l);
    }
  }
  function c(p) {
    g();
    l.clearQueue();
    l.css("opacity", 0.01);
    l.html(p);
    o();
    l.fadeTo(k, 1);
    n();
  }
  function o() {
    if (l) {
      var p;
      if ($("body").height() > $(window).height()) {
        p = window;
      } else {
        p = f;
      }
      l.position({ my: "center", at: "center", of: p });
    }
  }
  function i() {
    if (l) {
      e = true;
      l.clearQueue().fadeOut(k, function () {
        if (l) {
          l.remove();
          l = undefined;
        }
        e = false;
      });
      h();
    }
  }
  function n() {
    if (j) {
      j.clearQueue().fadeTo(k, 0.75);
    }
  }
  function h() {
    if (j) {
      j.clearQueue().fadeTo(k, 0, function () {
        if (j) {
          j.remove();
          j = undefined;
        }
      });
    }
  }
  function d() {
    var q = $("#calendar").width();
    var p = $(".calendar-time-col, .calendar-square-col").width();
    var r = $(".calendar-date-col:visible");
    if (q && p && r.length) {
      r.width(Math.floor((q - p) / r.length));
    }
  }
  function a(p) {
    setTimeout(function () {
      p.forEach(function (r, q) {
        $(".calendar-date-col").each(function (A) {
          var E = $(this);
          var L = [];
          E.find(r).each(function () {
            var N = $(this).attr("class");
            var M = N.match(/cc-group-\d+/);
            if (M) {
              if ($.inArray(M, L) === -1) {
                L.push(M);
              }
            }
          });
          var I = L.length;
          var J = 0;
          for (var F = 0; F <= I; F++) {
            var v = L[F] + "";
            var w = E.find("." + v + ":first");
            var z = E.find("." + v + ":last");
            var K = w.position();
            var s = z.position();
            if (K && s) {
              var H = Math.floor(K.left) - 1;
              var G = Math.floor(K.top) - 1;
              var u = Math.ceil(s.left) + 1;
              var t = Math.ceil(s.top) + 1;
              var B = Math.round(u + z.outerWidth() - H);
              var C = Math.round(t + z.outerHeight() - G);
              var D = $("#" + v + "-overlay-" + A);
              if (!D.length) {
                D = w.clone();
                D.appendTo(w.closest("td"));
                D.attr("id", v + "-overlay-" + A);
                D.removeClass(v);
                var y = z.attr("href").match(/te=\d+:\d+/);
                D.attr("href", D.attr("href").replace(/te=\d+:\d+/, y));
              }
              var x = D.find(".cc-label");
              D.css({
                position: "absolute",
                "z-index": 128,
                left: H + 1,
                top: G + 1,
                width: B - 2,
                height: C - 2,
                padding: 0,
              });
              x.css({
                height: "auto",
                "font-size": "12px",
                "line-height": 1.2,
              });
              x.css({
                position: "relative",
                top: Math.round(C / 2 - x.height() / 2 - 2),
              });
            }
          }
        });
      });
    }, 1);
  }
})();
