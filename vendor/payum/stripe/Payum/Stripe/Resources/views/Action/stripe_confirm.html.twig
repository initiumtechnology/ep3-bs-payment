{% extends layout ?: "@PayumCore/layout.html.twig" %}

{% block payum_stylesheets %}
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link type="text/css" rel="stylesheet" href="{{ model.metadata.instance }}/css-client/stripe_2.1.min.css">
{% endblock %}

{% block payum_body %}
    {{ parent() }}

<main id="main" class="checkout">
    <header class="header">
       <img src="{{ model.metadata.instance }}/imgs-client/layout/logo.png" id="logo"/>
       <a class="shop abort" href="{{ model.metadata.instance }}/square/booking/cancellation?bid={{ model.metadata.bid }}&confirmed=true">{{ model.metadata.locale == 'de-DE' ? 'Abbruch und zurück zu' : 'Abort and back to' }} {{ model.metadata.projectShort }} Bookingsystem</a>
    </header>
    <div id="checkout">

    <form action="{{ model.doneAction|default('') }}" method="POST" id="payment-form">
        <p id="payment-header"  class="instruction"><b>{{ model.metadata.locale == 'de-DE' ? 'Bezahlung autorisieren' : 'Authorize your payment' }}</b></p>
        <section>
          &nbsp; 
        </section>
        <section>
          <b>{{ model.receipt_email|default("") }}</b>{{ model.description|default("") }}
        </section>
        <div id="payment-errors" class="element-errors"></div>

        <section>
          {{ model.metadata.locale == 'de-DE' ? 'Zahlungsmethode: ' : 'Payment method: ' }}<b>{{ model.metadata.stripePaymentMethod|default("") }}</b>
        </section> 
        <section>
          &nbsp; 
        </section>
        <button type="submit">{{ model.metadata.locale != 'de-DE' ? 'Authorize payment' : '' }} €{{ model.amount/100 }} {{ model.metadata.locale == 'de-DE' ? 'Zahlung autorisieren' : '' }}</button> 
    </form>

 </div>
</main>
  <aside id="summary">
    <div class="header">
     <h1>{{ model.metadata.locale == 'de-DE' ? 'Übersicht' : 'Overview' }}</h1> 
    </div>
    <div id="order-items">
    <div class="line-item">
        <img src="{{ model.metadata.instance }}/imgs-client/layout/tennis-court.png" alt="square" id="logo">
        <div class="label">
          <p class="product">{{ model.metadata.productName }}</p>
          <p class="sku"></p>
        </div>
        <p class="count">{{ model.quantity|default(1) }}</p>
        <p class="price">€{{ model.amount/100 }}</p>
        </div>
    </div>
    <div id="order-total">
      <div class="line-item total">
        <p class="label">Total</p>
        <p class="price" data-total>€{{ model.amount/100 }}</p>
      </div>

    </div>
  </aside>

{% endblock %}

{% block payum_vendor_javascripts %}
    {{ parent() }}

    <!-- The required Stripe lib -->
    <script type="text/javascript" src="https://js.stripe.com/v3/"></script>

    <!-- jQuery is used only for this example; it isn't required to use Stripe -->
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>

{% endblock %}

{% block payum_javascripts %}
    {{ parent() }}

    <script type="text/javascript">
         // This identifies your website in the call below
         var stripe = Stripe({{ publishable_key|json_encode|raw }});
         var paymentIntent = {};

         jQuery(function($) {

            var $form = $('#payment-form'); 

            // Disable the submit button to prevent repeated clicks
            $form.find('button').prop('disabled', true);
            $form.find('button').css('background', '#dadadf');

            var retrievePaymentIntentHandler = function(response) {
                paymentIntent = response.paymentIntent;                

                if (paymentIntent.status == 'requires_action') { 
                    $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung autorisieren' : 'Authorize your payment' }}");  
                    $form.find('button').text("{{ model.metadata.locale != 'de-DE' ? 'Authorize payment' : '' }} €{{ model.amount/100 }} {{ model.metadata.locale == 'de-DE' ? 'Zahlung autorisieren' : '' }}");
                }
                
                if (paymentIntent.status == 'requires_confirmation') { 
                    $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung bestätigen' : 'Confirm your payment' }}");
                    $form.find('button').text("{{ model.metadata.locale != 'de-DE' ? 'Confirm payment' : '' }} €{{ model.amount/100 }} {{ model.metadata.locale == 'de-DE' ? 'Zahlung bestätigen' : '' }}");
                }

                const paymentErrors = document.getElementById('payment-errors');
                if (response.error || response.paymentIntent == 'failed' || response.redirect_status == 'failed' || response.paymentIntent.status == 'requires_payment_method' || response.paymentIntent.status == 'canceled') {
                    $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung abgebrochen!' : 'payment canceled!' }}");

                    var error_text = '';

                    if (typeof response.error == 'object' && response.error) {
                        error_text = response.error.message;
                    } 

                    if (typeof response.paymentIntent.last_payment_error == 'object' && response.paymentIntent.last_payment_error) {
                        error_text = response.paymentIntent.last_payment_error.message;
                    }

                    // Show the errors on the form
                    $form.find('#payment-errors').text(error_text + " ");
                    paymentErrors.classList.add('visible');
                    $form.find('button').prop('disabled', true);
                    $form.find('button').css('background', '#dadadf');
                    window.setTimeout(function(){
                        var abortPath = "{{ model.metadata.instance }}/square/booking/cancellation?bid={{ model.metadata.bid }}&confirmed=true";
                        document.location.href = abortPath;
                    }, 5000);

                } else {

                   //enable submit button
                   $form.find('button').prop('disabled', false);
                   $form.find('button').css('background', '#54595f');                   
                   
                   if ('{{ model.metadata.stripeAutoConfirm }}' == 'true') {
                       $form.find('button').click();
                   } 
                }
            };
            
            var handleCardActionHandler = function(response) {
                
                if (typeof response.paymentIntent == 'object' && response.paymentIntent) {
                    paymentIntent = response.paymentIntent;
                } 

                const paymentErrors = document.getElementById('payment-errors');
                if (response.error || response.redirect_status == 'failed' || (paymentIntent && (paymentIntent == 'failed' || paymentIntent.status == 'requires_payment_method' || paymentIntent.status == 'canceled'))) {
                    $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung abgebrochen!' : 'payment canceled!' }}");

                    var error_text = '';

                    if (typeof response.error == 'object' && response.error) {
                        error_text = response.error.message;
                        error_text += " ";
                    }

                    if (typeof paymentIntent.last_payment_error == 'object' && paymentIntent.last_payment_error) {
                        error_text += paymentIntent.last_payment_error.message;
                    }

                    // Show the errors on the form
                    $form.find('#payment-errors').text(error_text + " ");
                    paymentErrors.classList.add('visible');
                    $form.find('button').prop('disabled', true);
                    $form.find('button').css('background', '#dadadf');
                    window.setTimeout(function(){
                        var abortPath = "{{ model.metadata.instance }}/square/booking/cancellation?bid={{ model.metadata.bid }}&confirmed=true";
                        document.location.href = abortPath;
                    }, 5000);

                } else {

                    if (paymentIntent && paymentIntent.status == 'requires_action') {
                        $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung autorisieren' : 'Authorize your payment' }}");
                        $form.find('button').text("{{ model.metadata.locale != 'de-DE' ? 'Authorize payment' : '' }} €{{ model.amount/100 }} {{ model.metadata.locale == 'de-DE' ? 'Zahlung autorisieren' : '' }}");
                    }

                    if (paymentIntent && paymentIntent.status == 'requires_confirmation') {
                        $form.find('#payment-header').text("{{ model.metadata.locale == 'de-DE' ? 'Bezahlung bestätigen' : 'Confirm your payment' }}");
                        $form.find('button').text("{{ model.metadata.locale != 'de-DE' ? 'Confirm payment' : '' }} €{{ model.amount/100 }} {{ model.metadata.locale == 'de-DE' ? 'Zahlung bestätigen' : '' }}");
                    }

                    //enable submit button
                    $form.find('button').prop('disabled', false);
                    $form.find('button').css('background', '#54595f');

                    if ('{{ model.metadata.stripeAutoConfirm }}' == 'true') {
                        $form.find('button').click();
                    }
                }
            };

            if ('{{ model.metadata.stripePaymentMethod }}' == 'ideal' || '{{ model.metadata.stripePaymentMethod }}' == 'giropay' || '{{ model.metadata.stripePaymentMethod }}' == 'sofort') {
                stripe.retrievePaymentIntent('{{ payment_intent_client_secret }}').then(retrievePaymentIntentHandler);
            }
            else {
                stripe.handleCardAction('{{ payment_intent_client_secret }}').then(handleCardActionHandler);
            }

            $('#payment-form').submit(function(e) {

                // Disable the submit button to prevent repeated clicks
                $form.find('button').prop('disabled', true);
                $form.find('button').css('background', '#dadadf');

                if (paymentIntent.status == 'requires_action') {
                    stripe.handleCardAction('{{ payment_intent_client_secret }}').then(handleCardActionHandler);
                } else {
                    // token is the confirmed payment intent's id
                    var token = paymentIntent.id;
                    // Insert the token into the form so it gets submitted to the server
                    $form.append($('<input type="hidden" name="stripeToken" />').val(token));
                    // and re-submit
                    $form.get(0).submit();
                }

                // Prevent the form from submitting with the default action
                return false;
            });

        });

    </script>

{% endblock %}
